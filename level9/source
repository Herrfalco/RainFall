#include <cstring>
#include <cstdlib>

class	N {
	public:
		int		(N::*fn)(N&);
		char	str[100];
		int		nb;

		N(int val) {
			fn = &N::operator+;
			nb = val;
		}

		void *setAnnotation(char *s) {
			return (memcpy(str, s, strlen(s)));
		}

		int	operator+(N &other) {
			return (nb + other.nb);
		}

		int	operator-(N &other) {
			return (nb - other.nb);
		}
};

int		main(int argc, char **argv) {
	N	*n1;
	N	*n2;
	N	*n3;
	N	*n4;

	if 	(argc < 2)
		exit(1);
	n4 = new N(5);
	n3 = new N(6);
	n2 = n4;
	n1 = n3;
	n2->setAnnotation(argv[1]);
	return ((n1->*n1->fn)(*n2));
}
